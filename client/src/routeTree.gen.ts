/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";

// Create Virtual Routes

const TracesLazyImport = createFileRoute("/traces")();
const EditorLazyImport = createFileRoute("/editor")();
const DiffLazyImport = createFileRoute("/diff")();
const IndexLazyImport = createFileRoute("/")();

// Create/Update Routes

const TracesLazyRoute = TracesLazyImport.update({
  path: "/traces",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/traces.lazy").then((d) => d.Route));

const EditorLazyRoute = EditorLazyImport.update({
  path: "/editor",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/editor.lazy").then((d) => d.Route));

const DiffLazyRoute = DiffLazyImport.update({
  path: "/diff",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/diff.lazy").then((d) => d.Route));

const IndexLazyRoute = IndexLazyImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/index.lazy").then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/diff": {
      id: "/diff";
      path: "/diff";
      fullPath: "/diff";
      preLoaderRoute: typeof DiffLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/editor": {
      id: "/editor";
      path: "/editor";
      fullPath: "/editor";
      preLoaderRoute: typeof EditorLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/traces": {
      id: "/traces";
      path: "/traces";
      fullPath: "/traces";
      preLoaderRoute: typeof TracesLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexLazyRoute;
  "/diff": typeof DiffLazyRoute;
  "/editor": typeof EditorLazyRoute;
  "/traces": typeof TracesLazyRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexLazyRoute;
  "/diff": typeof DiffLazyRoute;
  "/editor": typeof EditorLazyRoute;
  "/traces": typeof TracesLazyRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexLazyRoute;
  "/diff": typeof DiffLazyRoute;
  "/editor": typeof EditorLazyRoute;
  "/traces": typeof TracesLazyRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/diff" | "/editor" | "/traces";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/diff" | "/editor" | "/traces";
  id: "__root__" | "/" | "/diff" | "/editor" | "/traces";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute;
  DiffLazyRoute: typeof DiffLazyRoute;
  EditorLazyRoute: typeof EditorLazyRoute;
  TracesLazyRoute: typeof TracesLazyRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  DiffLazyRoute: DiffLazyRoute,
  EditorLazyRoute: EditorLazyRoute,
  TracesLazyRoute: TracesLazyRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/diff",
        "/editor",
        "/traces"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/diff": {
      "filePath": "diff.lazy.tsx"
    },
    "/editor": {
      "filePath": "editor.lazy.tsx"
    },
    "/traces": {
      "filePath": "traces.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */

"""Add run_id column to spans

Revision ID: 0034
Revises: 0033
Create Date: 2025-04-25 17:31:23.374826

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlmodel.sql.sqltypes import AutoString

# revision identifiers, used by Alembic.
revision: str = "0034"
down_revision: str | None = "0033"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("function_tags")
    with op.batch_alter_table("spans", schema=None) as batch_op:
        batch_op.add_column(sa.Column("run_id", AutoString(), nullable=True))
        batch_op.create_index(batch_op.f("spans_run_id_idx"), ["run_id"], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("spans", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("spans_run_id_idx"))
        batch_op.drop_column("run_id")

    op.create_table(
        "function_tags",
        sa.Column("function_uuid", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("tag_uuid", sa.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["function_uuid"],
            ["functions.uuid"],
            name="function_tags_function_uuid_functions_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["tag_uuid"], ["tags.uuid"], name="function_tags_tag_uuid_tags_fkey"
        ),
        sa.PrimaryKeyConstraint("function_uuid", "tag_uuid", name="function_tags_pkey"),
    )
    # ### end Alembic commands ###
